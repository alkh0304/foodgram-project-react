name: Django-app workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: backend
            file: backend/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd foodgram-project-react/infra
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram
          sudo docker-compose stop
          sudo docker-compose rm backend
          rm .env
          touch .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d
          sudo docker-compose exec -T backend python foodgram/manage.py migrate
          sudo docker-compose exec -T backend python foodgram/manage.py collectstatic --no-input
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен! 
